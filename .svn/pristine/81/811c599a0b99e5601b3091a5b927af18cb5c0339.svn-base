package com.ginwave.smshelper;

import java.io.IOException;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

import com.umeng.analytics.MobclickAgent;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.Window;
import android.view.animation.Animation;
import android.view.animation.Animation.AnimationListener;
import android.view.animation.AnimationSet;
import android.view.animation.AnimationUtils;
import com.ginwave.smshelper.more.AutoReplyService;
import com.ginwave.smshelper.more.SetDataSource;

import android.animation.AnimatorSet;

public class Splash extends Activity {

	private static final int SPLASH_DELAY_TIME = 5000;
	private SharedPreferences sharedPreferences;
	private boolean isStartOnce;
	private Handler handler;
	private View splash;
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		MobclickAgent.setDebugMode(true);
		com.umeng.common.Log.LOG = true;
		MobclickAgent.onError(this);
		setContentView(R.layout.activity_splash);
		splash = (View) findViewById(R.id.splash);
		startService(new Intent(this, AutoReplyService.class));
		sharedPreferences = getSharedPreferences("AppGuide", MODE_PRIVATE);
		
		isStartOnce = sharedPreferences.getBoolean("isstartonce", false);
		int times = sharedPreferences.getInt("startTimes", 0);
		if(times % 2 == 0){
			splash.setBackgroundResource(R.drawable.p1);
		}
		else{
			splash.setBackgroundResource(R.drawable.p2);
		}
		times++;
		Editor editor = sharedPreferences.edit();
		editor.putInt("startTimes", times);
		editor.commit();
		if (isStartOnce) {
			final View splash = findViewById(R.id.splash);
			Animation fadeIn = AnimationUtils.loadAnimation(this,
					R.anim.fade_in);
			final Animation fadeOut = AnimationUtils.loadAnimation(this,
					R.anim.fade_out);
			splash.startAnimation(fadeIn);
			fadeIn.setAnimationListener(new AnimationListener(){

				@Override
				public void onAnimationEnd(Animation animation) {
					// TODO Auto-generated method stub
					splash.startAnimation(fadeOut);
				}

				@Override
				public void onAnimationRepeat(Animation animation) {
					// TODO Auto-generated method stub
					
				}

				@Override
				public void onAnimationStart(Animation animation) {
					// TODO Auto-generated method stub
					
				}
				
			});

			new Handler().postDelayed(new Runnable() {

				@Override
				public void run() {
					// TODO Auto-generated method stub
					Intent intent = new Intent();
					intent.setClass(Splash.this, SkipActivity.class);
					Splash.this.startActivity(intent);
					Splash.this.finish();
				}
			}, SPLASH_DELAY_TIME);
		} else {
			
			sharedPreferences.edit().putBoolean("isstartonce", true).commit();
			new Handler().postDelayed(new Runnable() {

				@Override
				public void run() {
					// TODO Auto-generated method stub
					Intent intent = new Intent();
					intent.setClass(Splash.this, AppGuide.class);
					Splash.this.startActivity(intent);
					Splash.this.finish();
				}
			}, SPLASH_DELAY_TIME);
		}
		
	}

	public void onResume() {
		super.onResume();
		MobclickAgent.onResume(this);
	}

	public void onPause() {
		super.onPause();
		MobclickAgent.onPause(this);
	}

	
}
